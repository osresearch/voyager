#!/opt/local/bin/perl
use warnings;
use strict;
use GD;

my $width = shift || 1024;
my $height = shift || 1024;
my $max = shift || 4096;
my $start = shift || 0x0;
my $dc_offset = shift || 0;
my $alpha = 0;

my $data = do { local $/; <> };
my $data_offset = 0x400 + $start * 3; # 0x400;
my $len = length($data);

my $gd = GD::Image->new($width,$height,1);

warn "Read $len bytes\n";
my $old_val = 0;

for(my $i = 0 ; $i < $width * $height ; $i++)
{
	my $x = $i / $height;
	my $y = $i % $height;

	my $offset = $data_offset + $i * 3;
	my $b0 = ord(substr($data, $offset + 0, 1));
	my $b1 = ord(substr($data, $offset + 1, 1));
	my $b2 = ord(substr($data, $offset + 2, 1));
	my $val = $b2 << 16 | $b1 << 8 | $b0 << 0;
	$val -= (1 << 24) if $val & (1 << 23);

	$val += $dc_offset;

	# apply some agc
	$val = ($val + $old_val * $alpha) / (1 + $alpha);
	$old_val = $val;


#	$val = -$val if $val < 0;
#
#	my $red = $val / $max;
#	my $green = $red > 255 ? 0 : $val < $max ? 255 : $red;
#	my $blue = $red > 255 ? 0 : $red;
#	$red = 255 if $red > 255;
#
	my $blue = $val < 0 ? -$val / $max : 0;
	my $green = $val > 0 ? $val / $max : 0;
	my $red = 0;

	$red = 255 if $val < -300000;


	#print "$val\n";
	$gd->setPixel($x, $y, $gd->colorExact($red, $green, $blue));
}

print $gd->png();
