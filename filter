#!/opt/local/bin/perl
use warnings;
use strict;
use GD;

my $width = shift || 1024;
my $height = shift || 1024;
my $max = shift || 4096;
my $start = shift || 0x0;
my $dc_offset = 500000;

my $threshold = -300000 + $dc_offset;
my $threshold_count_min = 8;

my $data = do { local $/; <> };
my $data_offset = 0x400 + $start * 3; # 0x400;
my $len = length($data);

my $gd = GD::Image->new($width,$height,1);

warn "Read $len bytes\n";

my $x = 0;
my $y = 0;
my $boundary_count = 0;
my $i = 0;

while($x < $width)
{
	my $offset = $data_offset + $i++ * 3;
	my $b0 = ord(substr($data, $offset + 0, 1));
	my $b1 = ord(substr($data, $offset + 1, 1));
	my $b2 = ord(substr($data, $offset + 2, 1));
	my $val = $b2 << 16 | $b1 << 8 | $b0 << 0;
	$val -= (1 << 24) if $val & (1 << 23);

	$val += $dc_offset;

	my $blue = $val < 0 ? -$val / $max : 0;
	#my $green = $val > 0 ? ($val*$val)/$max/(1<<20) : 0;
	my $green = $val > 0 ? $val / $max : 0;
	my $red = 0;

	$blue = 255 if $blue > 255;
	if ($green > 255)
	{
		# yellow is off scale green
		$green = 255;
		$red = 255;
	}

	# count how many exceed some threshold to determine if
	# a boundary has been sent
	if ($val < $threshold and $y > 300)
	{
		if ($boundary_count++ > $threshold_count_min)
		{
			$x++;
			$y = 0;
			$boundary_count = 0;
		}
		$red = 255;
	} else {
		$boundary_count = 0;
	}


	#print "$val\n";
	$gd->setPixel($x, $y, $gd->colorExact($red, $green, $blue));

	# don't exceed our height
	$y++ if $y < $height-1;
}

print $gd->png();
